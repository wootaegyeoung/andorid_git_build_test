name: Build & Release Android APK

on:
  push:
    tags: [ 'v*.*.*' ]     # 태그 push일 때만 실행
  workflow_dispatch:        # (선택) 수동 실행

permissions:
  contents: write

env:
  ANDROID_COMPILE_SDK: 35
  ANDROID_BUILD_TOOLS: 35.0.0
  JAVA_VERSION: '17'
  APP_MODULE_PATH: app      # 모듈명이 다르면 변경
  APP_DIR: .                # gradlew가 있는 폴더(루트가 아니면 예: android)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0         # 태그 정보 포함해서 체크아웃

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Build Tools & Platform
        run: |
          sdkmanager --install "build-tools;${{ env.ANDROID_BUILD_TOOLS }}" "platforms;android-${{ env.ANDROID_COMPILE_SDK }}"

      # 시크릿이 없으면 스킵 (무서명 빌드)
      - name: Restore keystore (only if secret exists)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > my-release.keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Make gradlew executable
        run: chmod +x gradlew
        working-directory: ${{ env.APP_DIR }}

      - name: Compute version from tag
        id: ver
        run: |
          echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT   # v 접두어 제거
          echo "tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Build release APK
        run: |
          # keystore가 복원된 경우에만 경로 export (없어도 문제 없음)
          if [ -f "$GITHUB_WORKSPACE/my-release.keystore" ]; then
            export KEYSTORE_PATH="$GITHUB_WORKSPACE/my-release.keystore"
          fi
          ./gradlew clean :${{ env.APP_MODULE_PATH }}:assembleRelease \
            -PversionName=${{ steps.ver.outputs.version }} \
            -PversionCode=${{ github.run_number }}
        working-directory: ${{ env.APP_DIR }}
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS:         ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD:      ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ steps.ver.outputs.version }}
          path: ${{ env.APP_DIR }}/${{ env.APP_MODULE_PATH }}/build/outputs/apk/release/*.apk
          if-no-files-found: error

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.tag }}
          files: ${{ env.APP_DIR }}/${{ env.APP_MODULE_PATH }}/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
